<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>7.0</version>
    <template_groups>
        <template_group>
            <uuid>846977d1dfed4968bc5f8bdb363285bc</uuid>
            <name>Templates/Operating systems</name>
        </template_group>
    </template_groups>
    <templates>
        <template>
            <uuid>12889b30225a4c608a7a399875ac88be</uuid>
            <template>LXC Linux by Zabbix agent</template>
            <name>LXC Linux by Zabbix agent</name>
            <description>This is an official Linux template. It requires Zabbix agent 7.0 or newer.

Notes on filesystem (FS) discovery:
- The ext4/3/2 filesystem reserves space for privileged usage, typically set at 5% by default.
- BTRFS allocates a default of 10% of the volume for its own needs.
- To mitigate potential disasters, FS usage triggers are based on the maximum available space.
  - Utilization formula: 'pused = 100 - 100 * (available / total - free + available)'
- The FS utilization chart, derived from graph prototypes, reflects FS reserved space as the difference between used and available space from the total volume.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux

Generated by official Zabbix template tool &quot;Templator&quot;</description>
            <groups>
                <group>
                    <name>Templates/Operating systems</name>
                </group>
            </groups>
            <items>
                <item>
                    <uuid>b5b2e658baf64eb48f5839e625c69a71</uuid>
                    <name>Host name of Zabbix agent running</name>
                    <key>agent.hostname</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>16eb9c6640724a89a236873e79963645</uuid>
                    <name>Zabbix agent ping</name>
                    <key>agent.ping</key>
                    <description>The agent always returns &quot;1&quot; for this item. May be used in combination with `nodata()` for the availability check.</description>
                    <valuemap>
                        <name>Zabbix agent ping status</name>
                    </valuemap>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>1dd74fa4e16647c9abeb500dd33f947d</uuid>
                    <name>Version of Zabbix agent running</name>
                    <key>agent.version</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>application</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>fa007439c752446bbe332601c143faa9</uuid>
                    <name>Maximum number of open file descriptors</name>
                    <key>kernel.maxfiles</key>
                    <delay>1h</delay>
                    <description>May be increased by using the `sysctl` utility or modifying the file `/etc/sysctl.conf`.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>01ecf69dd58948aba91f7ad8566c9c6d</uuid>
                            <expression>last(/LXC Linux by Zabbix agent/kernel.maxfiles)&lt;{$KERNEL.MAXFILES.MIN}</expression>
                            <name>Configured max number of open filedescriptors is too low</name>
                            <event_name>Configured max number of open filedescriptors is too low (&lt; {$KERNEL.MAXFILES.MIN})</event_name>
                            <priority>INFO</priority>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>9bab63aaffbe47d0a30c5a824dccbacc</uuid>
                    <name>Maximum number of processes</name>
                    <key>kernel.maxproc</key>
                    <delay>1h</delay>
                    <description>May be increased by using the `sysctl` utility or modifying the file `/etc/sysctl.conf`.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>94eb948aea354d9c9006f7bd089ed18b</uuid>
                            <expression>last(/LXC Linux by Zabbix agent/kernel.maxproc)&lt;{$KERNEL.MAXPROC.MIN}</expression>
                            <name>Configured max number of processes is too low</name>
                            <event_name>Configured max number of processes is too low (&lt; {$KERNEL.MAXPROC.MIN})</event_name>
                            <priority>INFO</priority>
                            <dependencies>
                                <dependency>
                                    <name>Getting closer to process limit</name>
                                    <expression>last(/LXC Linux by Zabbix agent/proc.num)/last(/LXC Linux by Zabbix agent/kernel.maxproc)*100&gt;80</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>2676b066c63d456caa6daf32d303408b</uuid>
                    <name>Number of processes</name>
                    <key>proc.num</key>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>b3841eca60d44a5eac90ce438f8c997b</uuid>
                    <name>Number of running processes</name>
                    <key>proc.num[,,run]</key>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>d246153028e44109a7041b2e1fe7f21e</uuid>
                    <name>System boot time</name>
                    <key>system.boottime</key>
                    <delay>15m</delay>
                    <units>unixtime</units>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>a7f11a99d0044354bfd53db6ad6a10d1</uuid>
                    <name>Interrupts per second</name>
                    <key>system.cpu.intr</key>
                    <value_type>FLOAT</value_type>
                    <description>Number of interrupts processed.</description>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>03e321fc6be94a1b98bc0e20503a13db</uuid>
                    <name>Load average (1m avg)</name>
                    <key>ct.cpu.load[all,avg1]</key>
                    <value_type>FLOAT</value_type>
                    <description>Calculated as the system CPU load divided by the number of CPU cores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>b26752b05c4c4bdeb2507667ec23e4fa</uuid>
                    <name>Load average (5m avg)</name>
                    <key>ct.cpu.load[all,avg5]</key>
                    <value_type>FLOAT</value_type>
                    <description>Calculated as the system CPU load divided by the number of CPU cores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>d8cbc0c934404918b020abcf8442a0aa</uuid>
                    <name>Load average (15m avg)</name>
                    <key>ct.cpu.load[all,avg15]</key>
                    <value_type>FLOAT</value_type>
                    <description>Calculated as the system CPU load divided by the number of CPU cores.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>84deb41ab6d14b7694bb3c17fc0deae4</uuid>
                    <name>Number of CPUs</name>
                    <key>system.cpu.num</key>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>a1564a6021964deea30702485018f71f</uuid>
                    <name>Context switches per second</name>
                    <key>system.cpu.switches</key>
                    <value_type>FLOAT</value_type>
                    <description>The combined rate at which all processors on the computer are switched from one thread to another.</description>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <parameters>
                                <parameter/>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>f99947bacf06466c88a85c35e5d38bdd</uuid>
                    <name>CPU utilization</name>
                    <type>DEPENDENT</type>
                    <key>system.cpu.util</key>
                    <delay>0</delay>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>CPU utilization expressed in %.</description>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>return (100 - value)</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>system.cpu.util[,idle]</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>e190dbfe1ac24509a5fd82123c457ffd</uuid>
                            <expression>min(/LXC Linux by Zabbix agent/system.cpu.util,5m)&gt;{$CPU.UTIL.CRIT}</expression>
                            <name>High CPU utilization</name>
                            <event_name>High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)</event_name>
                            <opdata>Current utilization: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>CPU utilization is too high. The system might be slow to respond.</description>
                            <dependencies>
                                <dependency>
                                    <name>Load average is too high</name>
                                    <expression>min(/LXC Linux by Zabbix agent/ct.cpu.load[all,avg1],5m)/last(/LXC Linux by Zabbix agent/system.cpu.num)&gt;{$LOAD_AVG_PER_CPU.MAX.WARN}
and last(/LXC Linux by Zabbix agent/ct.cpu.load[all,avg5])&gt;0
and last(/LXC Linux by Zabbix agent/ct.cpu.load[all,avg15])&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>97617b4eec7f481690b99c8fbf1714d6</uuid>
                    <name>CPU guest time</name>
                    <key>system.cpu.util[,guest]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time spent on running a virtual CPU for a guest operating system.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>19ceff7cbf664324bdd4962307d97f9a</uuid>
                    <name>CPU guest nice time</name>
                    <key>system.cpu.util[,guest_nice]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time spent on running a niced guest (a virtual CPU for guest operating systems under the control of the Linux kernel).</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>bd068d4343a2495092226e73e1b51864</uuid>
                    <name>CPU idle time</name>
                    <key>system.cpu.util[,idle]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent doing nothing.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>a9adc57d4d0d46f0b0c801018c620d20</uuid>
                    <name>CPU interrupt time</name>
                    <key>system.cpu.util[,interrupt]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent servicing hardware interrupts.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>dcf9678f5d6a45fdaba9b55c22f77e9d</uuid>
                    <name>CPU iowait time</name>
                    <key>system.cpu.util[,iowait]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has been waiting for I/O to complete.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>80bfcaf2562c447da216e12b889caa95</uuid>
                    <name>CPU nice time</name>
                    <key>system.cpu.util[,nice]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent running users' processes that have been niced.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>5935af3b20a84f58b80501532bd8b2e0</uuid>
                    <name>CPU softirq time</name>
                    <key>system.cpu.util[,softirq]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has been servicing software interrupts.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>9de82b6424cd451a8fc12ef76b6c052c</uuid>
                    <name>CPU steal time</name>
                    <key>system.cpu.util[,steal]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The amount of &quot;stolen&quot; CPU from this virtual machine by the hypervisor for other tasks, such as running another virtual machine.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>d0863b11bdb749e5978a6e0891b9d475</uuid>
                    <name>CPU system time</name>
                    <key>system.cpu.util[,system]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent running the kernel and its processes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>6e5659e14a984bd1bbfe044bab6098ee</uuid>
                    <name>CPU user time</name>
                    <key>system.cpu.util[,user]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>Time the CPU has spent running users' processes that are not niced.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>cpu</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>d13aa5af6486465b8f51cc83a87368f2</uuid>
                    <name>System name</name>
                    <key>system.hostname</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <description>The host name of the system.</description>
                    <inventory_link>NAME</inventory_link>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>e9ebd0ab91944912b153a52af2f741da</uuid>
                            <expression>change(/LXC Linux by Zabbix agent/system.hostname) and length(last(/LXC Linux by Zabbix agent/system.hostname))&gt;0</expression>
                            <name>System name has changed</name>
                            <event_name>System name has changed (new name: {ITEM.VALUE})</event_name>
                            <priority>INFO</priority>
                            <description>The name of the system has changed. Acknowledge to close the problem manually.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>security</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>479a0d3cdedf4fa5b6f47a485eb757cb</uuid>
                    <name>System local time</name>
                    <key>system.localtime</key>
                    <units>unixtime</units>
                    <description>The local system time of the host.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>fdf5a06fac0545369da6db01c8377e76</uuid>
                            <expression>fuzzytime(/LXC Linux by Zabbix agent/system.localtime,{$SYSTEM.FUZZYTIME.MAX})=0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>fuzzytime(/LXC Linux by Zabbix agent/system.localtime,{$SYSTEM.FUZZYTIME.MIN})=1</recovery_expression>
                            <name>System time is out of sync</name>
                            <event_name>System time is out of sync (diff with Zabbix server &gt; {$SYSTEM.FUZZYTIME.MAX})</event_name>
                            <priority>WARNING</priority>
                            <description>The host's system time is different from Zabbix server time.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>4cb8f5b48e8640a88ba4da1bb6aa10ad</uuid>
                    <name>Operating system architecture</name>
                    <key>system.sw.arch</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <description>The architecture of the operating system.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>b5bc05c6188a47cca6c1a653d157e258</uuid>
                    <name>Operating system</name>
                    <key>system.sw.os</key>
                    <delay>1h</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <inventory_link>OS</inventory_link>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1d</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>a73b2200915d4d2ea6fe1b95c3840334</uuid>
                            <expression>change(/LXC Linux by Zabbix agent/system.sw.os) and length(last(/LXC Linux by Zabbix agent/system.sw.os))&gt;0</expression>
                            <name>Operating system description has changed</name>
                            <priority>INFO</priority>
                            <description>The description of the operating system has changed. Possible reasons are that the system has been updated or replaced. Acknowledge to close the problem manually.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>System name has changed</name>
                                    <expression>change(/LXC Linux by Zabbix agent/system.hostname) and length(last(/LXC Linux by Zabbix agent/system.hostname))&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>52c3a8fa49fc44c09474765ca29084fb</uuid>
                    <name>Number of installed packages</name>
                    <key>system.sw.packages.get</key>
                    <delay>1h</delay>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <parameters>
                                <parameter>$.length()</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>os</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>a71a1889dc424c05be93687ce7ac28e2</uuid>
                            <expression>change(/LXC Linux by Zabbix agent/system.sw.packages.get)&lt;&gt;0</expression>
                            <name>Number of installed packages has been changed</name>
                            <priority>WARNING</priority>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>b8140974e3874dcaa992558deb2a6c17</uuid>
                    <name>Free swap space</name>
                    <key>ct.swap.size[,free]</key>
                    <units>B</units>
                    <description>The free space of the swap volume/file expressed in bytes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>1348eb24b50446e3913d934ab9c770ae</uuid>
                    <name>Free swap space in %</name>
                    <key>ct.swap.size[,pfree]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The free space of the swap volume/file expressed in %.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>05929b4a70014136a480facad82d3e9a</uuid>
                    <name>Total swap space</name>
                    <key>ct.swap.size[,total]</key>
                    <units>B</units>
                    <description>The total space of the swap volume/file expressed in bytes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                        <tag>
                            <tag>component</tag>
                            <value>storage</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>da178fb57d5c404da51771deb6897acf</uuid>
                    <name>System description</name>
                    <key>system.uname</key>
                    <delay>15m</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <description>The information as normally returned by `uname -a`.</description>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>12h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>1266a49850da43d1af84a92074dcf7e9</uuid>
                    <name>System uptime</name>
                    <key>system.uptime</key>
                    <delay>30s</delay>
                    <trends>0</trends>
                    <units>uptime</units>
                    <description>The system uptime expressed in the following format: &quot;N days, hh:mm:ss&quot;.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>64a6fa9b875b467e98faf44a6fb3a638</uuid>
                            <expression>last(/LXC Linux by Zabbix agent/system.uptime)&lt;10m</expression>
                            <name>{HOST.NAME} has been restarted</name>
                            <event_name>{HOST.NAME} has been restarted (uptime &lt; 10m)</event_name>
                            <priority>WARNING</priority>
                            <description>The host uptime is less than 10 minutes.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>notice</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>83e1f7fa32564b0591b5e566320e5d7e</uuid>
                    <name>Number of logged in users</name>
                    <key>system.users.num</key>
                    <description>The number of users who are currently logged in.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>environment</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>49f6b645ba1b4d63b229455f2530ac1b</uuid>
                    <name>Checksum of /etc/passwd</name>
                    <key>vfs.file.cksum[/etc/passwd,sha256]</key>
                    <delay>15m</delay>
                    <value_type>CHAR</value_type>
                    <trends>0</trends>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>security</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>b034d5dda91b423c89c221dcef966bd6</uuid>
                            <expression>last(/LXC Linux by Zabbix agent/vfs.file.cksum[/etc/passwd,sha256],#1)&lt;&gt;last(/LXC Linux by Zabbix agent/vfs.file.cksum[/etc/passwd,sha256],#2)</expression>
                            <name>/etc/passwd has been changed</name>
                            <priority>INFO</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Operating system description has changed</name>
                                    <expression>change(/LXC Linux by Zabbix agent/system.sw.os) and length(last(/LXC Linux by Zabbix agent/system.sw.os))&gt;0</expression>
                                </dependency>
                                <dependency>
                                    <name>System name has changed</name>
                                    <expression>change(/LXC Linux by Zabbix agent/system.hostname) and length(last(/LXC Linux by Zabbix agent/system.hostname))&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>security</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>e1dcec96c7d74f78beffc4c55ab14f1a</uuid>
                    <name>Get filesystems</name>
                    <key>vfs.fs.get</key>
                    <history>0</history>
                    <value_type>TEXT</value_type>
                    <trends>0</trends>
                    <description>The `vfs.fs.get` key acquires raw information set about the filesystems. Later to be extracted by preprocessing in dependent items.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>raw</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>5fb0e4cfdecd447d8eb8cdccfa536b7b</uuid>
                    <name>Available memory</name>
                    <key>ct.memory.size[available]</key>
                    <units>B</units>
                    <description>The available memory:
- in Linux = free + buffers + cache;
- on other platforms calculation may vary.

See also Appendixes in Zabbix Documentation about parameters of the `ct.memory.size` item.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>547755f87a184cf387e956b7b6eecb89</uuid>
                    <name>Available memory in %</name>
                    <key>ct.memory.size[pavailable]</key>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The available memory as percentage of the total. See also Appendixes in Zabbix Documentation about parameters of the `ct.memory.size` item.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>2874ced8702e40179702db1e2292d2d9</uuid>
                    <name>Total memory</name>
                    <key>ct.memory.size[total]</key>
                    <units>B</units>
                    <description>Total memory expressed in bytes.</description>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                </item>
                <item>
                    <uuid>0876c4f225bd4714b560ca08ac1296dd</uuid>
                    <name>Memory utilization</name>
                    <type>DEPENDENT</type>
                    <key>ct.memory.utilization</key>
                    <delay>0</delay>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The percentage of used memory is calculated as `100-pavailable`.</description>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>return (100-value);</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>ct.memory.size[pavailable]</key>
                    </master_item>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>memory</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>7320bcfdce6d4b1cb2d353a47d78c459</uuid>
                            <expression>min(/LXC Linux by Zabbix agent/ct.memory.utilization,5m)&gt;{$MEMORY.UTIL.MAX}</expression>
                            <name>High memory utilization</name>
                            <event_name>High memory utilization (&gt;{$MEMORY.UTIL.MAX}% for 5m)</event_name>
                            <priority>AVERAGE</priority>
                            <description>The system is running out of free memory.</description>
                            <dependencies>
                                <dependency>
                                    <name>Lack of available memory</name>
                                    <expression>max(/LXC Linux by Zabbix agent/ct.memory.size[available],5m)&lt;{$MEMORY.AVAILABLE.MIN} and last(/LXC Linux by Zabbix agent/ct.memory.size[total])&gt;0</expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>capacity</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <uuid>85e0937762c0481c84d7b9f440f4c369</uuid>
                    <name>Zabbix agent availability</name>
                    <type>INTERNAL</type>
                    <key>zabbix[host,agent,available]</key>
                    <description>Used for monitoring the availability status of the agent.</description>
                    <valuemap>
                        <name>zabbix.host.available</name>
                    </valuemap>
                    <tags>
                        <tag>
                            <tag>component</tag>
                            <value>system</value>
                        </tag>
                    </tags>
                    <triggers>
                        <trigger>
                            <uuid>64adf73845c1495899a4377d8a3a4eb3</uuid>
                            <expression>max(/LXC Linux by Zabbix agent/zabbix[host,agent,available],{$AGENT.TIMEOUT})=0</expression>
                            <name>Zabbix agent is not available</name>
                            <event_name>Zabbix agent is not available (for {$AGENT.TIMEOUT})</event_name>
                            <priority>AVERAGE</priority>
                            <description>For passive agents only, host availability is used with `{$AGENT.TIMEOUT}` as a time threshold.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                            </tags>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <uuid>371c5843c5e34df1a637dee8f7a26950</uuid>
                    <name>Network interface discovery</name>
                    <key>net.if.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>The discovery of network interfaces.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>d247e1ac754043cbbb3e15e27d476d7d</uuid>
                            <name>Interface {#IFNAME}: Inbound packets discarded</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,dropped]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>00133c04c8c74778a21d83a472834750</uuid>
                            <name>Interface {#IFNAME}: Inbound packets with errors</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>60f507fdfa094592b7b9859b2ef6c58a</uuid>
                            <name>Interface {#IFNAME}: Bits received</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <units>bps</units>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>8</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>eafe1c6b34b24214bdaa1434fa348619</uuid>
                            <name>Interface {#IFNAME}: Outbound packets discarded</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,dropped]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>29a0a3c1d76b44b1a1d63e91bad7ebcd</uuid>
                            <name>Interface {#IFNAME}: Outbound packets with errors</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;,errors]</key>
                            <delay>3m</delay>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>220bf8d875bb4bcda7ed45bfa759141e</uuid>
                            <name>Interface {#IFNAME}: Bits sent</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <units>bps</units>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>8</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>e4206af6e764465e8036138bb2c0e5f0</uuid>
                            <name>Interface {#IFNAME}: Operational status</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;]</key>
                            <trends>0</trends>
                            <description>Reference: https://www.kernel.org/doc/Documentation/networking/operstates.txt</description>
                            <valuemap>
                                <name>ifOperStatus</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>var newvalue;
switch(value) {
  case &quot;unknown&quot;:
	newvalue = 0;
	break;
  case &quot;notpresent&quot;:
	newvalue = 1;
	break;
  case &quot;down&quot;:
	newvalue = 2;
	break;
  case &quot;lowerlayerdown&quot;:
	newvalue = 3;
	break;
  case &quot;testing&quot;:
	newvalue = 4;
	break;
  case &quot;dormant&quot;:
	newvalue = 5;
	break;
  case &quot;up&quot;:
	newvalue = 6;
	break;  default:
	newvalue = &quot;Problem parsing interface operstate in JS&quot;;
}
return newvalue;</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>cc2db2a4b61b4b48961bc63bfd8913eb</uuid>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>This trigger expression works as follows:
1. It can be triggered if the operations status is down.
2. `{$IFCONTROL:&quot;{#IFNAME}&quot;}=1` - a user can redefine the context macro to &quot;0&quot;, marking this interface as not important. No new trigger will be fired if this interface is down.
3. `last(/TEMPLATE_NAME/METRIC,#1)&lt;&gt;last(/TEMPLATE_NAME/METRIC,#2)` - the trigger fires only if the operational status was up to (1) sometime before (so, does not fire for &quot;eternal off&quot; interfaces.)

WARNING: if closed manually - it will not fire again on the next poll, because of .diff.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>a4300247bf774522a42bb5d99d00b140</uuid>
                            <name>Interface {#IFNAME}: Speed</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;]</key>
                            <delay>5m</delay>
                            <trends>0</trends>
                            <units>bps</units>
                            <description>It indicates the latest or current speed value of the interface. The value is an integer representing the link speed expressed in bits/sec.
This attribute is only valid for the interfaces that implement the ethtool `get_link_ksettings` method (mostly Ethernet).

Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>1000000</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1h</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>7d8282fed41f484089683125b4b60e44</uuid>
                            <name>Interface {#IFNAME}: Interface type</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;]</key>
                            <delay>1h</delay>
                            <trends>0</trends>
                            <description>It indicates the interface protocol type as a decimal value.
See `include/uapi/linux/if_arp.h` for all possible values.
Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <valuemap>
                                <name>Linux::Interface protocol types</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <parameters>
                                        <parameter>1d</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>network</value>
                                </tag>
                                <tag>
                                    <tag>interface</tag>
                                    <value>{#IFNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>91be248b7e214de2be9d4f8bda9c4044</uuid>
                            <expression>change(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&lt;0 and last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&gt;0
and
(last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;])=6 or last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;])=1)
and
(last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2)</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>(change(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&gt;0 and last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;],#2)&gt;0) or
(last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2)</recovery_expression>
                            <name>Interface {#IFNAME}: Ethernet has changed to lower speed than it was before</name>
                            <opdata>Current reported speed: {ITEM.LASTVALUE1}</opdata>
                            <priority>INFO</priority>
                            <description>This Ethernet connection has transitioned down from its known maximum speed. This might be a sign of autonegotiation issues. Acknowledge to close the problem manually.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_expression>last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <uuid>715ea1de81f64bffbebb0f379f695b8b</uuid>
                            <expression>(avg(/LXC Linux by Zabbix agent/net.if.in[&quot;{#IFNAME}&quot;],15m)&gt;({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}/100)*last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;]) or
avg(/LXC Linux by Zabbix agent/net.if.out[&quot;{#IFNAME}&quot;],15m)&gt;({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}/100)*last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])) and
last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])&gt;0</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>avg(/LXC Linux by Zabbix agent/net.if.in[&quot;{#IFNAME}&quot;],15m)&lt;(({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}-3)/100)*last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;]) and
avg(/LXC Linux by Zabbix agent/net.if.out[&quot;{#IFNAME}&quot;],15m)&lt;(({$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}-3)/100)*last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/speed&quot;])</recovery_expression>
                            <name>Interface {#IFNAME}: High bandwidth usage</name>
                            <event_name>Interface {#IFNAME}: High bandwidth usage (&gt;{$IF.UTIL.MAX:&quot;{#IFNAME}&quot;}%)</event_name>
                            <opdata>In: {ITEM.LASTVALUE1}, out: {ITEM.LASTVALUE3}, speed: {ITEM.LASTVALUE2}</opdata>
                            <priority>WARNING</priority>
                            <description>The utilization of the network interface is close to its estimated maximum bandwidth.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_expression>last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                        <trigger_prototype>
                            <uuid>0c3cc8a466084b5697083e8d7716f456</uuid>
                            <expression>min(/LXC Linux by Zabbix agent/net.if.in[&quot;{#IFNAME}&quot;,errors],5m)&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}
or min(/LXC Linux by Zabbix agent/net.if.out[&quot;{#IFNAME}&quot;,errors],5m)&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>max(/LXC Linux by Zabbix agent/net.if.in[&quot;{#IFNAME}&quot;,errors],5m)&lt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}*0.8
and max(/LXC Linux by Zabbix agent/net.if.out[&quot;{#IFNAME}&quot;,errors],5m)&lt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}*0.8</recovery_expression>
                            <name>Interface {#IFNAME}: High error rate</name>
                            <event_name>Interface {#IFNAME}: High error rate (&gt;{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;} for 5m)</event_name>
                            <opdata>errors in: {ITEM.LASTVALUE1}, errors out: {ITEM.LASTVALUE2}</opdata>
                            <priority>WARNING</priority>
                            <description>It recovers when it is below 80% of the `{$IF.ERRORS.WARN:&quot;{#IFNAME}&quot;}` threshold.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Interface {#IFNAME}: Link down</name>
                                    <expression>{$IFCONTROL:&quot;{#IFNAME}&quot;}=1 and last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])=2 and (last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#1)&lt;&gt;last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;],#2))</expression>
                                    <recovery_expression>last(/LXC Linux by Zabbix agent/vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/operstate&quot;])&lt;&gt;2 or {$IFCONTROL:&quot;{#IFNAME}&quot;}=0</recovery_expression>
                                </dependency>
                            </dependencies>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>availability</value>
                                </tag>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>b697f0d9ef0945aea713e34b97cab39a</uuid>
                            <name>Interface {#IFNAME}: Network traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>199C0D</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>BOLD_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>00611C</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;,errors]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>F7941D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;,errors]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>FC6EA3</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;,dropped]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>5</sortorder>
                                    <color>6C59DC</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;,dropped]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <uuid>0a2881f753cc432b9604a2d56f774321</uuid>
                    <name>Block devices discovery</name>
                    <key>vfs.dev.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DEVTYPE}</macro>
                                <value>disk</value>
                                <formulaid>C</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>3c73f0ea96d140d99ef92edc0fe4244a</uuid>
                            <name>{#DEVNAME}: Disk average queue size (avgqu-sz)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.queue_size[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <description>The current average disk queue; the number of requests outstanding on the disk while the performance data is being collected.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[10]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>405c0e318268495b80e2c36978927a5b</uuid>
                            <name>{#DEVNAME}: Disk read request avg waiting time (r_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.read.await[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last(//vfs.dev.read.time.rate[{#DEVNAME}])/(last(//vfs.dev.read.rate[{#DEVNAME}])+(last(//vfs.dev.read.rate[{#DEVNAME}])=0)))*1000*(last(//vfs.dev.read.rate[{#DEVNAME}]) &gt; 0)</params>
                            <description>This formula contains two Boolean expressions that evaluate to 1 or 0 in order to set the calculated metric to zero and to avoid the exception - division by zero.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>ff44891de1b6425f9bd14a9c9ef719f0</uuid>
                            <name>{#DEVNAME}: Disk read rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>!r/s</units>
                            <description>r/s (read operations per second) - the number (after merges) of read requests completed per second for the device.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[0]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>f04ef457224b4f99b2fb86b5ae7ff963</uuid>
                            <name>{#DEVNAME}: Disk read time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.time.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <description>The rate of total read time counter; used in `r_await` calculation.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[3]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>6addb5fa372043668be89d6c0d884bb7</uuid>
                            <name>{#DEVNAME}: Disk utilization</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.util[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>The percentage of elapsed time during which the selected disk drive was busy while servicing read or write requests.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[9]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.1</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>cfe99a7f8487414793ccde637ceb4e2a</uuid>
                            <name>{#DEVNAME}: Disk write request avg waiting time (w_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.write.await[{#DEVNAME}]</key>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last(//vfs.dev.write.time.rate[{#DEVNAME}])/(last(//vfs.dev.write.rate[{#DEVNAME}])+(last(//vfs.dev.write.rate[{#DEVNAME}])=0)))*1000*(last(//vfs.dev.write.rate[{#DEVNAME}]) &gt; 0)</params>
                            <description>This formula contains two Boolean expressions that evaluate to 1 or 0 in order to set the calculated metric to zero and to avoid the exception - division by zero.</description>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>1f33b999125e4ae58b8b64237e86efdb</uuid>
                            <name>{#DEVNAME}: Disk write rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>!w/s</units>
                            <description>w/s (write operations per second) - the number (after merges) of write requests completed per second for the device.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[4]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>4793427177c749c3a9282f4a9a0398cd</uuid>
                            <name>{#DEVNAME}: Disk write time (rate)</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.time.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <description>The rate of total write time counter; used in `w_await` calculation.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$[7]</parameter>
                                    </parameters>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <parameters>
                                        <parameter/>
                                    </parameters>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <parameters>
                                        <parameter>0.001</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>disk</tag>
                                    <value>{#DEVNAME}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>88567adbb3cd4e8c8d40eeea7d591e4f</uuid>
                            <name>{#DEVNAME}: Get stats</name>
                            <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            <history>0</history>
                            <value_type>TEXT</value_type>
                            <trends>0</trends>
                            <description>The contents of get `/sys/block/{#DEVNAME}/stat` to get the disk statistics.</description>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <parameters>
                                        <parameter>return JSON.stringify(value.trim().split(/ +/));</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>raw</value>
                                </tag>
                            </tags>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <uuid>27085118852a406383f2fd0236a6712c</uuid>
                            <expression>min(/LXC Linux by Zabbix agent/vfs.dev.read.await[{#DEVNAME}],15m) &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} or min(/LXC Linux by Zabbix agent/vfs.dev.write.await[{#DEVNAME}],15m) &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;}</expression>
                            <name>{#DEVNAME}: Disk read/write request responses are too high</name>
                            <event_name>{#DEVNAME}: Disk read/write request responses are too high (read &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m or write &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m)</event_name>
                            <priority>WARNING</priority>
                            <description>This trigger might indicate the disk `{#DEVNAME}` saturation.</description>
                            <manual_close>YES</manual_close>
                            <tags>
                                <tag>
                                    <tag>scope</tag>
                                    <value>performance</value>
                                </tag>
                            </tags>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>d3c244d00b344dd0935cc332bcc88e62</uuid>
                            <name>{#DEVNAME}: Disk average waiting time</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.dev.read.await[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.dev.write.await[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>a0d52015f75d40a79edb8888929736ce</uuid>
                            <name>{#DEVNAME}: Disk read/write rates</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>b1416e1646044e32bac0364cfeea39ee</uuid>
                            <name>{#DEVNAME}: Disk utilization and queue</name>
                            <graph_items>
                                <graph_item>
                                    <color>199C0D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.dev.queue_size[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.dev.util[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <uuid>29a370b4b60141299fc55840d4418bee</uuid>
                    <name>Mounted filesystem discovery</name>
                    <type>DEPENDENT</type>
                    <key>vfs.fs.dependent.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                                <formulaid>C</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>D</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>The discovery of mounted filesystems with different types.</description>
                    <item_prototypes>
                        <item_prototype>
                            <uuid>5bdb1d1f2c884536a008b10a7b93b8b3</uuid>
                            <name>FS [{#FSNAME}]: Inodes: Free, in %</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.inode[{#FSNAME},pfree]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Free metadata space expressed in %.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.inodes.pfree</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>a367b5edaebf474896cbdb15bb788d7a</uuid>
                                    <expression>min(/LXC Linux by Zabbix agent/vfs.fs.dependent.inode[{#FSNAME},pfree],5m)&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                    <name>FS [{#FSNAME}]: Running out of free inodes</name>
                                    <event_name>{#FSNAME}: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}%)</event_name>
                                    <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Disk writing may fail if index nodes are exhausted, leading to error messages like &quot;No space left on device&quot; or &quot;Disk is full&quot;, despite available free space.</description>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>47e5d84e277f402db441f3db8df334ef</uuid>
                                    <expression>min(/LXC Linux by Zabbix agent/vfs.fs.dependent.inode[{#FSNAME},pfree],5m)&lt;{$VFS.FS.INODE.PFREE.MIN.WARN:&quot;{#FSNAME}&quot;}</expression>
                                    <name>FS [{#FSNAME}]: Running out of free inodes</name>
                                    <event_name>FS [{#FSNAME}]: Running out of free inodes (free &lt; {$VFS.FS.INODE.PFREE.MIN.WARN:&quot;{#FSNAME}&quot;}%)</event_name>
                                    <opdata>Free inodes: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Disk writing may fail if index nodes are exhausted, leading to error messages like &quot;No space left on device&quot; or &quot;Disk is full&quot;, despite available free space.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>FS [{#FSNAME}]: Running out of free inodes</name>
                                            <expression>min(/LXC Linux by Zabbix agent/vfs.fs.dependent.inode[{#FSNAME},pfree],5m)&lt;{$VFS.FS.INODE.PFREE.MIN.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>60b286251085454cba2c5463090928d8</uuid>
                            <name>FS [{#FSNAME}]: Space: Available</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},free]</key>
                            <delay>0</delay>
                            <units>B</units>
                            <description>Available storage space expressed in bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.free</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>93616fd9a2574c8f9a97b9541e38e480</uuid>
                            <name>FS [{#FSNAME}]: Space: Used, in %</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},pused]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Calculated as the percentage of currently used space compared to the maximum available space.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.pused</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>564bedc683534cce92f2f32d02dc22bc</uuid>
                                    <expression>min(/LXC Linux by Zabbix agent/vfs.fs.dependent.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                    <name>FS [{#FSNAME}]: Space is critically low</name>
                                    <event_name>FS [{#FSNAME}]: Space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%, total {{?last(//vfs.fs.dependent.size[{#FSNAME},total])/1024/1024/1024}.fmtnum(1)}GB)</event_name>
                                    <opdata>Space used: {{ITEM.LASTVALUE1}.fmtnum(1)}%</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>The volume's space usage exceeds the `{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%` limit.
The trigger expression is based on the current used and maximum available spaces.
Event name represents the total volume space, which can differ from the maximum available space, depending on the filesystem type.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <uuid>c6c8019d6f4e43878d89490124594dfd</uuid>
                                    <expression>min(/LXC Linux by Zabbix agent/vfs.fs.dependent.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}</expression>
                                    <name>FS [{#FSNAME}]: Space is low</name>
                                    <event_name>FS [{#FSNAME}]: Space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%, total {{?last(//vfs.fs.dependent.size[{#FSNAME},total])/1024/1024/1024}.fmtnum(1)}GB)</event_name>
                                    <opdata>Space used: {{ITEM.LASTVALUE1}.fmtnum(1)}%</opdata>
                                    <priority>WARNING</priority>
                                    <description>The volume's space usage exceeds the `{$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%` limit.
The trigger expression is based on the current used and maximum available spaces.
Event name represents the total volume space, which can differ from the maximum available space, depending on the filesystem type.</description>
                                    <manual_close>YES</manual_close>
                                    <dependencies>
                                        <dependency>
                                            <name>FS [{#FSNAME}]: Space is critically low</name>
                                            <expression>min(/LXC Linux by Zabbix agent/vfs.fs.dependent.size[{#FSNAME},pused],5m)&gt;{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}</expression>
                                        </dependency>
                                    </dependencies>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>capacity</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <uuid>885debaae57043b09652690c81001634</uuid>
                            <name>FS [{#FSNAME}]: Space: Total</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},total]</key>
                            <delay>0</delay>
                            <units>B</units>
                            <description>Total space expressed in bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.total</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>3d6648b6c74b4b5480591000410e9c4a</uuid>
                            <name>FS [{#FSNAME}]: Space: Used</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent.size[{#FSNAME},used]</key>
                            <delay>0</delay>
                            <units>B</units>
                            <description>Used storage expressed in bytes.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.bytes.used</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>24295fd549ba4cc48f1e068c513128e3</uuid>
                            <name>FS [{#FSNAME}]: Get data</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            <delay>0</delay>
                            <history>1h</history>
                            <value_type>TEXT</value_type>
                            <trends>0</trends>
                            <description>Intermediate data of `{#FSNAME}` filesystem.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.[?(@.fsname=='{#FSNAME}')].first()</parameter>
                                    </parameters>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.get</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>raw</value>
                                </tag>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                        </item_prototype>
                        <item_prototype>
                            <uuid>5efed1e4fc524c37ab63e6ebecf8c795</uuid>
                            <name>FS [{#FSNAME}]: Option: Read-only</name>
                            <type>DEPENDENT</type>
                            <key>vfs.fs.dependent[{#FSNAME},readonly]</key>
                            <delay>0</delay>
                            <description>The filesystem is mounted as read-only. It is available only for Zabbix agents 6.4 and higher.</description>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <parameters>
                                        <parameter>$.options</parameter>
                                    </parameters>
                                    <error_handler>DISCARD_VALUE</error_handler>
                                </step>
                                <step>
                                    <type>REGEX</type>
                                    <parameters>
                                        <parameter>(?:^|,)ro\b</parameter>
                                        <parameter>1</parameter>
                                    </parameters>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.fs.dependent[{#FSNAME},data]</key>
                            </master_item>
                            <tags>
                                <tag>
                                    <tag>component</tag>
                                    <value>storage</value>
                                </tag>
                                <tag>
                                    <tag>filesystem</tag>
                                    <value>{#FSNAME}</value>
                                </tag>
                                <tag>
                                    <tag>fstype</tag>
                                    <value>{#FSTYPE}</value>
                                </tag>
                            </tags>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <uuid>4b5fcc64bdde4ae488976a5083d53e34</uuid>
                                    <expression>last(/LXC Linux by Zabbix agent/vfs.fs.dependent[{#FSNAME},readonly],#2)=0 and last(/LXC Linux by Zabbix agent/vfs.fs.dependent[{#FSNAME},readonly])=1</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>last(/LXC Linux by Zabbix agent/vfs.fs.dependent[{#FSNAME},readonly])=0</recovery_expression>
                                    <name>FS [{#FSNAME}]: Filesystem has become read-only</name>
                                    <priority>AVERAGE</priority>
                                    <description>The filesystem has become read-only, possibly due to an I/O error. Available only for Zabbix agents 6.4 and higher.</description>
                                    <manual_close>YES</manual_close>
                                    <tags>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>availability</value>
                                        </tag>
                                        <tag>
                                            <tag>scope</tag>
                                            <value>performance</value>
                                        </tag>
                                    </tags>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <uuid>78709f8bcb504e1d87a1f99fbdb18614</uuid>
                            <name>FS [{#FSTYPE}({#FSNAME})]: Space usage graph, in % (relative to max available)</name>
                            <width>600</width>
                            <height>340</height>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <ymax_type_1>FIXED</ymax_type_1>
                            <graph_items>
                                <graph_item>
                                    <drawtype>FILLED_REGION</drawtype>
                                    <color>F63100</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},pused]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <uuid>c7438cbde5b54935af2d0406667f889e</uuid>
                            <name>FS [{#FSTYPE}({#FSNAME})]: Space utilization chart (relative to total)</name>
                            <width>600</width>
                            <height>340</height>
                            <type>PIE</type>
                            <show_3d>YES</show_3d>
                            <graph_items>
                                <graph_item>
                                    <color>787878</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <type>GRAPH_SUM</type>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},total]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>F63100</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},used]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>199C09</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <item>
                                        <host>LXC Linux by Zabbix agent</host>
                                        <key>vfs.fs.dependent.size[{#FSNAME},free]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>vfs.fs.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#FSNAME}</lld_macro>
                            <path>$.fsname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#FSTYPE}</lld_macro>
                            <path>$.fstype</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <parameters>
                                <parameter>var filesystems = JSON.parse(value);

result = filesystems.map(function (filesystem) {
	return {
		'fsname': filesystem.fsname,
		'fstype': filesystem.fstype
	};
});

return JSON.stringify(result);</parameter>
                            </parameters>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <parameters>
                                <parameter>1h</parameter>
                            </parameters>
                        </step>
                    </preprocessing>
                    <overrides>
                        <override>
                            <name>Skip metadata collection for dynamic FS</name>
                            <step>1</step>
                            <filter>
                                <conditions>
                                    <condition>
                                        <macro>{#FSTYPE}</macro>
                                        <value>^(btrfs|zfs)$</value>
                                        <formulaid>A</formulaid>
                                    </condition>
                                </conditions>
                            </filter>
                            <operations>
                                <operation>
                                    <operationobject>ITEM_PROTOTYPE</operationobject>
                                    <operator>LIKE</operator>
                                    <value>Inodes</value>
                                    <discover>NO_DISCOVER</discover>
                                </operation>
                            </operations>
                        </override>
                    </overrides>
                </discovery_rule>
            </discovery_rules>
            <tags>
                <tag>
                    <tag>class</tag>
                    <value>os</value>
                </tag>
                <tag>
                    <tag>target</tag>
                    <value>linux</value>
                </tag>
            </tags>
            <macros>
                <macro>
                    <macro>{$AGENT.TIMEOUT}</macro>
                    <value>3m</value>
                    <description>Timeout after which agent is considered unavailable. Works only for agents reachable from Zabbix server/proxy (passive mode).</description>
                </macro>
                <macro>
                    <macro>{$CPU.UTIL.CRIT}</macro>
                    <value>90</value>
                    <description>Critical threshold of CPU utilization expressed in %.</description>
                </macro>
                <macro>
                    <macro>{$IF.ERRORS.WARN}</macro>
                    <value>2</value>
                    <description>Warning threshold of error packet rate. Can be used with interface name as context.</description>
                </macro>
                <macro>
                    <macro>{$IF.UTIL.MAX}</macro>
                    <value>90</value>
                    <description>Used as a threshold in the interface utilization trigger.</description>
                </macro>
                <macro>
                    <macro>{$IFCONTROL}</macro>
                    <value>1</value>
                    <description>Link status trigger will be fired only for interfaces where the context macro equals &quot;1&quot;.</description>
                </macro>
                <macro>
                    <macro>{$KERNEL.MAXFILES.MIN}</macro>
                    <value>256</value>
                </macro>
                <macro>
                    <macro>{$KERNEL.MAXPROC.MIN}</macro>
                    <value>1024</value>
                </macro>
                <macro>
                    <macro>{$LOAD_AVG_PER_CPU.MAX.WARN}</macro>
                    <value>1.5</value>
                    <description>The CPU load per core is considered sustainable. If necessary, it can be tuned.</description>
                </macro>
                <macro>
                    <macro>{$MEMORY.AVAILABLE.MIN}</macro>
                    <value>20M</value>
                    <description>Used as a threshold in the available memory trigger.</description>
                </macro>
                <macro>
                    <macro>{$MEMORY.UTIL.MAX}</macro>
                    <value>90</value>
                    <description>Used as a threshold in the memory utilization trigger.</description>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.MATCHES}</macro>
                    <value>^.*$</value>
                    <description>Used for network interface discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$NET.IF.IFNAME.NOT_MATCHES}</macro>
                    <value>(^Software Loopback Interface|^NULL[0-9.]*$|^[Ll]o[0-9.]*$|^[Ss]ystem$|^Nu[0-9.]*$|^veth[0-9A-z]+$|docker[0-9]+|br-[a-z0-9]{12})</value>
                    <description>Filters out `loopbacks`, `nulls`, docker `veth` links and `docker0` bridge by default.</description>
                </macro>
                <macro>
                    <macro>{$SWAP.PFREE.MIN.WARN}</macro>
                    <value>50</value>
                    <description>The warning threshold of the minimum free swap.</description>
                </macro>
                <macro>
                    <macro>{$SYSTEM.FUZZYTIME.MAX}</macro>
                    <value>60s</value>
                    <description>The upper threshold for difference of system time.</description>
                </macro>
                <macro>
                    <macro>{$SYSTEM.FUZZYTIME.MIN}</macro>
                    <value>10s</value>
                    <description>The lower threshold for difference of system time. Used in recovery expression to avoid trigger flapping.</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>Used for block device discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro>
                    <value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+|ploop[a-z0-9]+|md[0-9]*|hcp[0-9]*|zram[0-9]*)</value>
                    <description>Used for block device discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.READ.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>The average response time (in ms) of disk read before the trigger fires.</description>
                </macro>
                <macro>
                    <macro>{$VFS.DEV.WRITE.AWAIT.WARN}</macro>
                    <value>20</value>
                    <description>The average response time (in ms) of disk write before the trigger fires.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.MATCHES}</macro>
                    <value>.+</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSNAME.NOT_MATCHES}</macro>
                    <value>^(/dev|/sys|/run|/proc|.+/shm$)</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.MATCHES}</macro>
                    <value>^(btrfs|ext2|ext3|ext4|reiser|xfs|ffs|ufs|jfs|jfs2|vxfs|hfs|apfs|refs|ntfs|fat32|zfs)$</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.FSTYPE.NOT_MATCHES}</macro>
                    <value>^\s$</value>
                    <description>Used for filesystem discovery. Can be overridden on the host or linked template level.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.CRIT}</macro>
                    <value>10</value>
                    <description>The critical threshold of the filesystem metadata utilization.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.INODE.PFREE.MIN.WARN}</macro>
                    <value>20</value>
                    <description>The warning threshold of the filesystem metadata utilization.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.CRIT}</macro>
                    <value>90</value>
                    <description>The critical threshold of the filesystem utilization.</description>
                </macro>
                <macro>
                    <macro>{$VFS.FS.PUSED.MAX.WARN}</macro>
                    <value>80</value>
                    <description>The warning threshold of the filesystem utilization.</description>
                </macro>
            </macros>
            <dashboards>
                <dashboard>
                    <uuid>774aee023960435eb836a166ead50e6c</uuid>
                    <name>Filesystems</name>
                    <pages>
                        <page>
                            <name>Overview</name>
                            <widgets>
                                <widget>
                                    <type>graphprototype</type>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>3</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>FS [{#FSTYPE}({#FSNAME})]: Space utilization chart (relative to total)</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAEB</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>5</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>FS [{#FSTYPE}({#FSNAME})]: Space usage graph, in % (relative to max available)</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAEC</value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
                <dashboard>
                    <uuid>5f11744b57f44bf091fcbd9ef13f4aa0</uuid>
                    <name>Network interfaces</name>
                    <pages>
                        <page>
                            <name>Overview</name>
                            <widgets>
                                <widget>
                                    <type>graphprototype</type>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>Interface {#IFNAME}: Network traffic</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAJ</value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
                <dashboard>
                    <uuid>e00fc9a7cc8447328fd8703622310e70</uuid>
                    <name>System performance</name>
                    <pages>
                        <page>
                            <widgets>
                                <widget>
                                    <type>graph</type>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>Linux: System load</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAA</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <y>5</y>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>Linux: Memory usage</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAC</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>10</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>3</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>FS [{#FSTYPE}({#FSNAME})]: Space utilization chart (relative to total)</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAEA</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>15</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>{#DEVNAME}: Disk read/write rates</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAF</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>20</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>{#DEVNAME}: Disk average waiting time</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAG</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>25</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>{#DEVNAME}: Disk utilization and queue</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAH</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graphprototype</type>
                                    <y>30</y>
                                    <width>72</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>INTEGER</type>
                                            <name>columns</name>
                                            <value>1</value>
                                        </field>
                                        <field>
                                            <type>GRAPH_PROTOTYPE</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>Interface {#IFNAME}: Network traffic</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAI</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <x>36</x>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>Linux: CPU usage</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAB</value>
                                        </field>
                                    </fields>
                                </widget>
                                <widget>
                                    <type>graph</type>
                                    <x>36</x>
                                    <y>5</y>
                                    <width>36</width>
                                    <height>5</height>
                                    <fields>
                                        <field>
                                            <type>GRAPH</type>
                                            <name>graphid.0</name>
                                            <value>
                                                <host>LXC Linux by Zabbix agent</host>
                                                <name>Linux: Swap usage</name>
                                            </value>
                                        </field>
                                        <field>
                                            <type>STRING</type>
                                            <name>reference</name>
                                            <value>AAAAD</value>
                                        </field>
                                    </fields>
                                </widget>
                            </widgets>
                        </page>
                    </pages>
                </dashboard>
            </dashboards>
            <valuemaps>
                <valuemap>
                    <uuid>b056511062ca41098de1df99f4ac476c</uuid>
                    <name>ifOperStatus</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>unknown</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>notpresent</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>down</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>lowerlayerdown</newvalue>
                        </mapping>
                        <mapping>
                            <value>4</value>
                            <newvalue>testing</newvalue>
                        </mapping>
                        <mapping>
                            <value>5</value>
                            <newvalue>dormant</newvalue>
                        </mapping>
                        <mapping>
                            <value>6</value>
                            <newvalue>up</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>43f3dd8f0dc342d2bff191ee994cefc1</uuid>
                    <name>Linux::Interface protocol types</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>from KA9Q: NET/ROM pseudo</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>Ethernet</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>Experimental Ethernet</newvalue>
                        </mapping>
                        <mapping>
                            <value>3</value>
                            <newvalue>AX.25 Level 2</newvalue>
                        </mapping>
                        <mapping>
                            <value>4</value>
                            <newvalue>PROnet token ring</newvalue>
                        </mapping>
                        <mapping>
                            <value>5</value>
                            <newvalue>Chaosnet</newvalue>
                        </mapping>
                        <mapping>
                            <value>6</value>
                            <newvalue>IEEE 802.2 Ethernet/TR/TB</newvalue>
                        </mapping>
                        <mapping>
                            <value>7</value>
                            <newvalue>ARCnet</newvalue>
                        </mapping>
                        <mapping>
                            <value>8</value>
                            <newvalue>APPLEtalk</newvalue>
                        </mapping>
                        <mapping>
                            <value>15</value>
                            <newvalue>Frame Relay DLCI</newvalue>
                        </mapping>
                        <mapping>
                            <value>19</value>
                            <newvalue>ATM</newvalue>
                        </mapping>
                        <mapping>
                            <value>23</value>
                            <newvalue>Metricom STRIP (new IANA id)</newvalue>
                        </mapping>
                        <mapping>
                            <value>24</value>
                            <newvalue>IEEE 1394 IPv4 - RFC 2734</newvalue>
                        </mapping>
                        <mapping>
                            <value>27</value>
                            <newvalue>EUI-64</newvalue>
                        </mapping>
                        <mapping>
                            <value>32</value>
                            <newvalue>InfiniBand</newvalue>
                        </mapping>
                        <mapping>
                            <value>256</value>
                            <newvalue>ARPHRD_SLIP</newvalue>
                        </mapping>
                        <mapping>
                            <value>257</value>
                            <newvalue>ARPHRD_CSLIP</newvalue>
                        </mapping>
                        <mapping>
                            <value>258</value>
                            <newvalue>ARPHRD_SLIP6</newvalue>
                        </mapping>
                        <mapping>
                            <value>259</value>
                            <newvalue>ARPHRD_CSLIP6</newvalue>
                        </mapping>
                        <mapping>
                            <value>260</value>
                            <newvalue>Notional KISS type</newvalue>
                        </mapping>
                        <mapping>
                            <value>264</value>
                            <newvalue>ARPHRD_ADAPT</newvalue>
                        </mapping>
                        <mapping>
                            <value>270</value>
                            <newvalue>ARPHRD_ROSE</newvalue>
                        </mapping>
                        <mapping>
                            <value>271</value>
                            <newvalue>CCITT X.25</newvalue>
                        </mapping>
                        <mapping>
                            <value>272</value>
                            <newvalue>Boards with X.25 in firmware</newvalue>
                        </mapping>
                        <mapping>
                            <value>280</value>
                            <newvalue>Controller Area Network</newvalue>
                        </mapping>
                        <mapping>
                            <value>512</value>
                            <newvalue>ARPHRD_PPP</newvalue>
                        </mapping>
                        <mapping>
                            <value>513</value>
                            <newvalue>Cisco HDLC</newvalue>
                        </mapping>
                        <mapping>
                            <value>516</value>
                            <newvalue>LAPB</newvalue>
                        </mapping>
                        <mapping>
                            <value>517</value>
                            <newvalue>Digital's DDCMP protocol</newvalue>
                        </mapping>
                        <mapping>
                            <value>518</value>
                            <newvalue>Raw HDLC</newvalue>
                        </mapping>
                        <mapping>
                            <value>519</value>
                            <newvalue>Raw IP</newvalue>
                        </mapping>
                        <mapping>
                            <value>768</value>
                            <newvalue>IPIP tunnel</newvalue>
                        </mapping>
                        <mapping>
                            <value>769</value>
                            <newvalue>IP6IP6 tunnel</newvalue>
                        </mapping>
                        <mapping>
                            <value>770</value>
                            <newvalue>Frame Relay Access Device</newvalue>
                        </mapping>
                        <mapping>
                            <value>771</value>
                            <newvalue>SKIP vif</newvalue>
                        </mapping>
                        <mapping>
                            <value>772</value>
                            <newvalue>Loopback device</newvalue>
                        </mapping>
                        <mapping>
                            <value>773</value>
                            <newvalue>Localtalk device</newvalue>
                        </mapping>
                        <mapping>
                            <value>774</value>
                            <newvalue>Fiber Distributed Data Interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>775</value>
                            <newvalue>AP1000 BIF</newvalue>
                        </mapping>
                        <mapping>
                            <value>776</value>
                            <newvalue>sit0 device - IPv6-in-IPv4</newvalue>
                        </mapping>
                        <mapping>
                            <value>777</value>
                            <newvalue>IP over DDP tunneller</newvalue>
                        </mapping>
                        <mapping>
                            <value>778</value>
                            <newvalue>GRE over IP</newvalue>
                        </mapping>
                        <mapping>
                            <value>779</value>
                            <newvalue>PIMSM register interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>780</value>
                            <newvalue>High Performance Parallel Interface</newvalue>
                        </mapping>
                        <mapping>
                            <value>781</value>
                            <newvalue>Nexus 64Mbps Ash</newvalue>
                        </mapping>
                        <mapping>
                            <value>782</value>
                            <newvalue>Acorn Econet</newvalue>
                        </mapping>
                        <mapping>
                            <value>783</value>
                            <newvalue>Linux-IrDA</newvalue>
                        </mapping>
                        <mapping>
                            <value>784</value>
                            <newvalue>Point to point fibrechannel</newvalue>
                        </mapping>
                        <mapping>
                            <value>785</value>
                            <newvalue>Fibrechannel arbitrated loop</newvalue>
                        </mapping>
                        <mapping>
                            <value>786</value>
                            <newvalue>Fibrechannel public loop</newvalue>
                        </mapping>
                        <mapping>
                            <value>787</value>
                            <newvalue>Fibrechannel fabric</newvalue>
                        </mapping>
                        <mapping>
                            <value>800</value>
                            <newvalue>Magic type ident for TR</newvalue>
                        </mapping>
                        <mapping>
                            <value>801</value>
                            <newvalue>IEEE 802.11</newvalue>
                        </mapping>
                        <mapping>
                            <value>802</value>
                            <newvalue>IEEE 802.11 + Prism2 header</newvalue>
                        </mapping>
                        <mapping>
                            <value>803</value>
                            <newvalue>IEEE 802.11 + radiotap header</newvalue>
                        </mapping>
                        <mapping>
                            <value>804</value>
                            <newvalue>ARPHRD_IEEE802154</newvalue>
                        </mapping>
                        <mapping>
                            <value>805</value>
                            <newvalue>IEEE 802.15.4 network monitor</newvalue>
                        </mapping>
                        <mapping>
                            <value>820</value>
                            <newvalue>PhoNet media type</newvalue>
                        </mapping>
                        <mapping>
                            <value>821</value>
                            <newvalue>PhoNet pipe header</newvalue>
                        </mapping>
                        <mapping>
                            <value>822</value>
                            <newvalue>CAIF media type</newvalue>
                        </mapping>
                        <mapping>
                            <value>823</value>
                            <newvalue>GRE over IPv6</newvalue>
                        </mapping>
                        <mapping>
                            <value>824</value>
                            <newvalue>Netlink header</newvalue>
                        </mapping>
                        <mapping>
                            <value>825</value>
                            <newvalue>IPv6 over LoWPAN</newvalue>
                        </mapping>
                        <mapping>
                            <value>826</value>
                            <newvalue>Vsock monitor header</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>234bc60f28bf40868de5b65a8ffc7b2b</uuid>
                    <name>zabbix.host.available</name>
                    <mappings>
                        <mapping>
                            <value>0</value>
                            <newvalue>not available</newvalue>
                        </mapping>
                        <mapping>
                            <value>1</value>
                            <newvalue>available</newvalue>
                        </mapping>
                        <mapping>
                            <value>2</value>
                            <newvalue>unknown</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
                <valuemap>
                    <uuid>c10786bfdb0c49e7a4c88b7f3cce0ae3</uuid>
                    <name>Zabbix agent ping status</name>
                    <mappings>
                        <mapping>
                            <value>1</value>
                            <newvalue>Up</newvalue>
                        </mapping>
                    </mappings>
                </valuemap>
            </valuemaps>
        </template>
    </templates>
    <triggers>
        <trigger>
            <uuid>c7c9125b0e1e4133b360fb2022a3a5aa</uuid>
            <expression>last(/LXC Linux by Zabbix agent/proc.num)/last(/LXC Linux by Zabbix agent/kernel.maxproc)*100&gt;80</expression>
            <name>Getting closer to process limit</name>
            <event_name>Getting closer to process limit (over 80% used)</event_name>
            <opdata>{ITEM.LASTVALUE1} active, {ITEM.LASTVALUE2} limit.</opdata>
            <priority>WARNING</priority>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>performance</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>59a49193d3254b15923cbc753cce95f4</uuid>
            <expression>max(/LXC Linux by Zabbix agent/ct.swap.size[,pfree],5m)&lt;{$SWAP.PFREE.MIN.WARN} and last(/LXC Linux by Zabbix agent/ct.swap.size[,total])&gt;0</expression>
            <name>High swap space usage</name>
            <event_name>High swap space usage (less than {$SWAP.PFREE.MIN.WARN}% free)</event_name>
            <opdata>Free: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
            <priority>WARNING</priority>
            <description>If there is no swap configured, this trigger is ignored.</description>
            <dependencies>
                <dependency>
                    <name>High memory utilization</name>
                    <expression>min(/LXC Linux by Zabbix agent/ct.memory.utilization,5m)&gt;{$MEMORY.UTIL.MAX}</expression>
                </dependency>
                <dependency>
                    <name>Lack of available memory</name>
                    <expression>max(/LXC Linux by Zabbix agent/ct.memory.size[available],5m)&lt;{$MEMORY.AVAILABLE.MIN} and last(/LXC Linux by Zabbix agent/ct.memory.size[total])&gt;0</expression>
                </dependency>
            </dependencies>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>7daabba7102e476d9fbf45be70871345</uuid>
            <expression>max(/LXC Linux by Zabbix agent/ct.memory.size[available],5m)&lt;{$MEMORY.AVAILABLE.MIN} and last(/LXC Linux by Zabbix agent/ct.memory.size[total])&gt;0</expression>
            <name>Lack of available memory</name>
            <event_name>Lack of available memory (&lt;{$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})</event_name>
            <opdata>Available: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}</opdata>
            <priority>AVERAGE</priority>
            <description>The system is running out of memory.</description>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
                <tag>
                    <tag>scope</tag>
                    <value>performance</value>
                </tag>
            </tags>
        </trigger>
        <trigger>
            <uuid>51fc6dbe72184bd1ad1381aa166724bc</uuid>
            <expression>min(/LXC Linux by Zabbix agent/ct.cpu.load[all,avg1],5m)/last(/LXC Linux by Zabbix agent/system.cpu.num)&gt;{$LOAD_AVG_PER_CPU.MAX.WARN}
and last(/LXC Linux by Zabbix agent/ct.cpu.load[all,avg5])&gt;0
and last(/LXC Linux by Zabbix agent/ct.cpu.load[all,avg15])&gt;0</expression>
            <name>Load average is too high</name>
            <event_name>Load average is too high (per CPU load over {$LOAD_AVG_PER_CPU.MAX.WARN} for 5m)</event_name>
            <opdata>Load averages(1m 5m 15m): ({ITEM.LASTVALUE1} {ITEM.LASTVALUE3} {ITEM.LASTVALUE4}), # of CPUs: {ITEM.LASTVALUE2}</opdata>
            <priority>AVERAGE</priority>
            <description>The load average per CPU is too high. The system may be slow to respond.</description>
            <tags>
                <tag>
                    <tag>scope</tag>
                    <value>capacity</value>
                </tag>
                <tag>
                    <tag>scope</tag>
                    <value>performance</value>
                </tag>
            </tags>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <uuid>51b180137e1546d18f8202addc9bf3dc</uuid>
            <name>Linux: CPU jumps</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.switches</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.intr</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>70f0d570086043bb9c44bac17f7a8132</uuid>
            <name>Linux: CPU usage</name>
            <type>STACKED</type>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.util[,system]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.util[,user]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00611C</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.util[,nice]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>F7941D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.util[,iowait]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>FC6EA3</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.util[,steal]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>6C59DC</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.util[,interrupt]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>6</sortorder>
                    <color>C7A72D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.util[,softirq]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>7</sortorder>
                    <color>BA2A5D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.util[,guest]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>8</sortorder>
                    <color>F230E0</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.util[,guest_nice]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>d5372d0b4d7c45e39e453938bbdbbd52</uuid>
            <name>Linux: CPU utilization</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.util</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>4e71366b2f604d4fa5775bf0020849f3</uuid>
            <name>Linux: Memory usage</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.memory.size[total]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>F63100</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.memory.size[available]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>40320cd6f18c4fc7acc81f5c02b5b68e</uuid>
            <name>Linux: Memory utilization</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.memory.utilization</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>816fb94cd2f24afd9e89d9fce2b2c0be</uuid>
            <name>Linux: Processes</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>proc.num</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>proc.num[,,run]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>81eaed0ea7a64574b4005253d3a06a40</uuid>
            <name>Linux: Swap usage</name>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.swap.size[,free]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.swap.size[,total]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <uuid>df1e04971b504f908dd025f91cb7ec24</uuid>
            <name>Linux: System load</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <graph_items>
                <graph_item>
                    <color>199C0D</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.load[all,avg1]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.load[all,avg5]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00611C</color>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>ct.cpu.load[all,avg15]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>F7941D</color>
                    <yaxisside>RIGHT</yaxisside>
                    <item>
                        <host>LXC Linux by Zabbix agent</host>
                        <key>system.cpu.num</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
